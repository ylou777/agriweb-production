# üöÄ Script de d√©marrage automatique AgriWeb
# Ex√©cuter avec : .\start_agriweb.ps1

Write-Host "üöÄ D√âMARRAGE AUTOMATIQUE AGRIWEB" -ForegroundColor Green
Write-Host "=" * 50 -ForegroundColor Green

$projectPath = "C:\Users\Utilisateur\Desktop\AG32.1\ag3reprise\AgW3b"

# Fonction pour v√©rifier si un port est utilis√©
function Test-Port {
    param([int]$Port)
    try {
        $connection = New-Object System.Net.Sockets.TcpClient
        $connection.Connect("localhost", $Port)
        $connection.Close()
        return $true
    }
    catch {
        return $false
    }
}

# V√©rifier les pr√©requis
Write-Host "üîç V√©rification des pr√©requis..." -ForegroundColor Yellow

# V√©rifier Python
try {
    $pythonVersion = python --version
    Write-Host "‚úÖ Python trouv√©: $pythonVersion" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Python non trouv√©! Installez Python d'abord." -ForegroundColor Red
    exit 1
}

# V√©rifier ngrok
try {
    $ngrokVersion = ngrok version
    Write-Host "‚úÖ ngrok trouv√©: $ngrokVersion" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå ngrok non trouv√©! Installez ngrok d'abord." -ForegroundColor Red
    exit 1
}

# Aller dans le r√©pertoire du projet
Set-Location $projectPath

# V√©rifier si les ports sont libres
Write-Host "`nüîç V√©rification des ports..." -ForegroundColor Yellow

if (Test-Port 5000) {
    Write-Host "‚ö†Ô∏è Port 5000 occup√©. Tentative d'arr√™t..." -ForegroundColor Yellow
    Get-Process | Where-Object {$_.ProcessName -like "*python*"} | Stop-Process -Force -ErrorAction SilentlyContinue
    Start-Sleep -Seconds 2
}

if (Test-Port 8080) {
    Write-Host "‚úÖ GeoServer semble d√©j√† d√©marr√© sur le port 8080" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è GeoServer non d√©tect√© sur le port 8080. D√©marrez-le manuellement si n√©cessaire." -ForegroundColor Yellow
}

# 1. D√©marrer le tunnel ngrok
Write-Host "`nüîó 1. D√©marrage du tunnel ngrok..." -ForegroundColor Cyan
Start-Process -FilePath "powershell" -ArgumentList @(
    "-NoExit",
    "-Command",
    "cd '$projectPath'; python ngrok_manager.py"
) -WindowStyle Normal

# Attendre que ngrok d√©marre
Write-Host "‚è≥ Attente du d√©marrage de ngrok (15 secondes)..." -ForegroundColor Yellow
Start-Sleep -Seconds 15

# V√©rifier que ngrok fonctionne
try {
    $response = Invoke-RestMethod -Uri "http://localhost:4040/api/tunnels" -TimeoutSec 5
    $tunnelUrl = $response.tunnels[0].public_url
    Write-Host "‚úÖ Tunnel ngrok actif: $tunnelUrl" -ForegroundColor Green
}
catch {
    Write-Host "‚ö†Ô∏è Impossible de v√©rifier le tunnel ngrok" -ForegroundColor Yellow
}

# 2. D√©marrer l'application Flask
Write-Host "`nüåê 2. D√©marrage de l'application AgriWeb..." -ForegroundColor Cyan
Start-Process -FilePath "powershell" -ArgumentList @(
    "-NoExit",
    "-Command",
    "cd '$projectPath'; .\.venv\Scripts\Activate.ps1; python agriweb_hebergement_gratuit.py"
) -WindowStyle Normal

# Attendre que l'application d√©marre
Write-Host "‚è≥ Attente du d√©marrage de l'application (10 secondes)..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# V√©rification finale
Write-Host "`nüîç V√©rification finale..." -ForegroundColor Yellow

# Test application
try {
    $response = Invoke-WebRequest -Uri "http://localhost:5000" -TimeoutSec 5 -UseBasicParsing
    Write-Host "‚úÖ Application accessible sur http://localhost:5000" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Application non accessible" -ForegroundColor Red
}

# Test GeoServer
try {
    $response = Invoke-WebRequest -Uri "http://localhost:8080/geoserver" -TimeoutSec 5 -UseBasicParsing
    Write-Host "‚úÖ GeoServer accessible sur http://localhost:8080/geoserver" -ForegroundColor Green
}
catch {
    Write-Host "‚ö†Ô∏è GeoServer non accessible (d√©marrez-le manuellement)" -ForegroundColor Yellow
}

# R√©sum√©
Write-Host "`n" + "=" * 60 -ForegroundColor Green
Write-Host "üéâ D√âMARRAGE TERMIN√â!" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Green

Write-Host "`nüìä URLS D'ACC√àS:" -ForegroundColor Cyan
Write-Host "üè† Application principale: http://localhost:5000" -ForegroundColor White
Write-Host "üëë Interface admin: http://localhost:5000/admin" -ForegroundColor White
Write-Host "   ‚îî‚îÄ Login: admin@test.com / admin123" -ForegroundColor Gray
Write-Host "üó∫Ô∏è GeoServer: http://localhost:8080/geoserver" -ForegroundColor White
Write-Host "üîó ngrok Dashboard: http://localhost:4040" -ForegroundColor White

Write-Host "`nüìù NOTES IMPORTANTES:" -ForegroundColor Yellow
Write-Host "‚Ä¢ Gardez toutes les fen√™tres PowerShell ouvertes" -ForegroundColor White
Write-Host "‚Ä¢ Le tunnel ngrok se met √† jour automatiquement" -ForegroundColor White
Write-Host "‚Ä¢ Pour arr√™ter: Ctrl+C dans chaque fen√™tre" -ForegroundColor White
Write-Host "‚Ä¢ Consultez TUTORIEL_DEMARRAGE.md pour plus d'infos" -ForegroundColor White

Write-Host "`nüöÄ Votre application AgriWeb est pr√™te!" -ForegroundColor Green

# Ouvrir le navigateur sur l'application
Start-Sleep -Seconds 3
Write-Host "`nüåê Ouverture du navigateur..." -ForegroundColor Cyan
Start-Process "http://localhost:5000"
