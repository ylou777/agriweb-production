#!/usr/bin/env python3
"""
Script pour r√©cup√©rer l'URL ngrok actuelle et la configurer pour Railway
"""
import requests
import json

def get_current_ngrok_url():
    """R√©cup√®re l'URL ngrok actuelle"""
    try:
        response = requests.get("http://localhost:4040/api/tunnels", timeout=5)
        if response.status_code == 200:
            data = response.json()
            tunnels = data.get('tunnels', [])
            
            for tunnel in tunnels:
                if tunnel.get('proto') == 'https':
                    public_url = tunnel.get('public_url')
                    if public_url:
                        geoserver_url = f"{public_url}/geoserver"
                        return geoserver_url, public_url
            
            print("‚ùå Aucun tunnel HTTPS trouv√©")
            return None, None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erreur de connexion √† ngrok: {e}")
        return None, None
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        return None, None

def test_geoserver_connectivity(geoserver_url):
    """Teste la connectivit√© vers GeoServer"""
    try:
        response = requests.head(geoserver_url, timeout=10, allow_redirects=True)
        return response.status_code in [200, 302]
    except:
        return False

def main():
    print("üîç R√©cup√©ration de l'URL ngrok actuelle...")
    
    geoserver_url, ngrok_url = get_current_ngrok_url()
    
    if not geoserver_url:
        print("‚ùå Impossible de r√©cup√©rer l'URL ngrok")
        print("Assurez-vous que ngrok est d√©marr√© avec: ngrok http 8080")
        return
    
    print(f"‚úÖ URL ngrok trouv√©e: {ngrok_url}")
    print(f"‚úÖ URL GeoServer: {geoserver_url}")
    
    # Test de connectivit√©
    print("\nüß™ Test de connectivit√©...")
    if test_geoserver_connectivity(geoserver_url):
        print("‚úÖ GeoServer accessible via ngrok")
    else:
        print("‚ùå GeoServer non accessible via ngrok")
        print("V√©rifiez que GeoServer est d√©marr√© sur le port 8080")
        return
    
    print(f"\nüìã Configuration pour Railway:")
    print(f"Variable d'environnement √† configurer:")
    print(f"GEOSERVER_URL = {geoserver_url}")
    
    print(f"\nüöÄ Instructions:")
    print(f"1. Allez sur railway.app")
    print(f"2. Ouvrez votre projet 'aware-surprise-production'")
    print(f"3. Allez dans l'onglet 'Variables'")
    print(f"4. Modifiez ou ajoutez: GEOSERVER_URL = {geoserver_url}")
    print(f"5. Railway red√©marrera automatiquement avec la nouvelle URL")
    
    print(f"\nüí° Alternative:")
    print(f"Pour un tunnel ngrok permanent, consid√©rez:")
    print(f"- ngrok avec un domaine personnalis√©")
    print(f"- Un compte ngrok payant pour des URLs fixes")
    print(f"- Un GeoServer h√©berg√© dans le cloud")

if __name__ == "__main__":
    main()
