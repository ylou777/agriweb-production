#!/usr/bin/env python3
"""
üîó TEST INT√âGRATION AGRIWEB-GEOSERVER
V√©rifie que l'application AgriWeb peut communiquer avec GeoServer
"""

import sys
import os
import importlib.util

def test_agriweb_geoserver_integration():
    """Test l'int√©gration AgriWeb-GeoServer"""
    
    print("üîó TEST INT√âGRATION AGRIWEB-GEOSERVER")
    print("=" * 50)
    
    # Test 1: Import de la configuration AgriWeb
    print("1Ô∏è‚É£ Test configuration AgriWeb...")
    try:
        # Import de la configuration depuis agriweb_hebergement_gratuit.py
        spec = importlib.util.spec_from_file_location(
            "agriweb_config", 
            "agriweb_hebergement_gratuit.py"
        )
        agriweb_module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(agriweb_module)
        
        geoserver_url = agriweb_module.GEOSERVER_URL
        print(f"   ‚úÖ URL GeoServer: {geoserver_url}")
        
        if hasattr(agriweb_module, 'GEOSERVER_LAYERS_CONFIG'):
            layers_config = agriweb_module.GEOSERVER_LAYERS_CONFIG
            print(f"   ‚úÖ Configuration couches charg√©e")
            print(f"   üìä Workspace: {layers_config.get('workspace', 'N/A')}")
            print(f"   üìã Nombre de couches: {len(layers_config.get('layers', {}))}")
        else:
            print("   ‚ö†Ô∏è GEOSERVER_LAYERS_CONFIG non trouv√©")
            
    except Exception as e:
        print(f"   ‚ùå Erreur import AgriWeb: {e}")
    
    print()
    
    # Test 2: Test de connexion depuis la configuration AgriWeb
    print("2Ô∏è‚É£ Test connexion via configuration AgriWeb...")
    try:
        import requests
        
        # Test avec l'URL configur√©e dans AgriWeb
        response = requests.get(f"{geoserver_url}/web/", timeout=10)
        if response.status_code == 200:
            print(f"   ‚úÖ Connexion GeoServer r√©ussie via AgriWeb")
            print(f"   üìä Status: {response.status_code}")
        else:
            print(f"   ‚ö†Ô∏è Status inattendu: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå Erreur connexion: {e}")
    
    print()
    
    # Test 3: V√©rification des endpoints configur√©s
    print("3Ô∏è‚É£ Test endpoints configur√©s...")
    try:
        if 'layers_config' in locals():
            endpoints = layers_config.get('endpoints', {})
            
            for name, url in endpoints.items():
                print(f"   üîó Test {name}: {url}")
                try:
                    if name == 'admin':
                        response = requests.get(url, timeout=5)
                    else:
                        # Pour WMS/WFS, test avec GetCapabilities
                        if 'wms' in name.lower():
                            test_url = f"{url}?service=WMS&version=1.3.0&request=GetCapabilities"
                        elif 'wfs' in name.lower():
                            test_url = f"{url}?service=WFS&version=2.0.0&request=GetCapabilities"
                        else:
                            test_url = url
                        response = requests.get(test_url, timeout=5)
                    
                    print(f"      ‚úÖ Status: {response.status_code}")
                    
                except Exception as e:
                    print(f"      ‚ùå Erreur: {e}")
        else:
            print("   ‚ö†Ô∏è Configuration endpoints non disponible")
            
    except Exception as e:
        print(f"   ‚ùå Erreur test endpoints: {e}")
    
    print()
    print("=" * 50)
    print("üìã R√âSUM√â INT√âGRATION:")
    
    try:
        # Test synth√©tique
        config_ok = 'geoserver_url' in locals()
        connection_ok = False
        
        if config_ok:
            try:
                import requests
                response = requests.get(f"{geoserver_url}/web/", timeout=5)
                connection_ok = response.status_code == 200
            except:
                pass
        
        if config_ok and connection_ok:
            print("üéâ INT√âGRATION AGRIWEB-GEOSERVER FONCTIONNELLE!")
            print("‚úÖ Configuration AgriWeb charg√©e")
            print("‚úÖ Connexion GeoServer √©tablie")
            print("‚úÖ Endpoints configur√©s")
            print()
            print("üöÄ PR√äT POUR LA PRODUCTION!")
            print("   ‚Üí L'application AgriWeb peut maintenant utiliser GeoServer")
            print("   ‚Üí Tous les services g√©ographiques sont op√©rationnels")
            
        else:
            print("‚ö†Ô∏è PROBL√àMES D'INT√âGRATION:")
            print(f"   Configuration: {'‚úÖ' if config_ok else '‚ùå'}")
            print(f"   Connexion: {'‚úÖ' if connection_ok else '‚ùå'}")
            
    except Exception as e:
        print(f"‚ùå Erreur test synth√©tique: {e}")
    
    print("=" * 50)

if __name__ == "__main__":
    test_agriweb_geoserver_integration()
