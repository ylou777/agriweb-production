#!/usr/bin/env python3
"""
Guide de configuration GeoServer pour acc√®s distant
√âtapes d√©taill√©es selon recommandations ChatGPT
"""

def show_network_configuration_guide():
    """Guide de configuration r√©seau"""
    
    print("üåê CONFIGURATION R√âSEAU POUR ACC√àS DISTANT")
    print("="*50)
    
    print("\n1Ô∏è‚É£ OUVERTURE DES PORTS SUR VOTRE ROUTEUR/BOX")
    print("-" * 45)
    print("‚ñ∂Ô∏è Acc√©dez √† l'interface de votre box (192.168.1.1 ou 192.168.0.1)")
    print("‚ñ∂Ô∏è Cherchez 'Redirection de ports' ou 'NAT/PAT'")
    print("‚ñ∂Ô∏è Configurez:")
    print("   Port externe: 8080")
    print("   Port interne: 8080") 
    print("   IP locale: [IP de votre PC GeoServer]")
    print("   Protocole: TCP")
    
    print("\n2Ô∏è‚É£ FIREWALL WINDOWS")
    print("-" * 20)
    print("‚ñ∂Ô∏è Ouvrir 'Pare-feu Windows Defender'")
    print("‚ñ∂Ô∏è 'Param√®tres avanc√©s' ‚Üí 'R√®gles de trafic entrant'")
    print("‚ñ∂Ô∏è 'Nouvelle r√®gle' ‚Üí Port ‚Üí TCP ‚Üí Port 8080")
    print("‚ñ∂Ô∏è Autoriser la connexion")
    
    print("\n3Ô∏è‚É£ V√âRIFICATION IP PUBLIQUE")
    print("-" * 30)
    print("‚ñ∂Ô∏è Visitez: https://whatismyipaddress.com/")
    print("‚ñ∂Ô∏è Notez votre IP publique")
    print("‚ñ∂Ô∏è Testez: http://VOTRE-IP:8080/geoserver")

def show_geoserver_user_configuration():
    """Guide de configuration utilisateur GeoServer"""
    
    print("\nüë§ CONFIGURATION UTILISATEUR GEOSERVER")
    print("="*45)
    
    print("\n1Ô∏è‚É£ ACC√àS ADMIN GEOSERVER")
    print("-" * 25)
    print("‚ñ∂Ô∏è Ouvrez: http://localhost:8080/geoserver/web")
    print("‚ñ∂Ô∏è Connectez-vous avec admin/geoserver")
    
    print("\n2Ô∏è‚É£ CR√âER UTILISATEUR RAILWAY")
    print("-" * 30)
    print("‚ñ∂Ô∏è Aller dans: Security ‚Üí Users, Groups, Roles")
    print("‚ñ∂Ô∏è Onglet 'Users' ‚Üí 'Add new user'")
    print("‚ñ∂Ô∏è Configurer:")
    print("   Username: railway_user")
    print("   Password: [mot de passe fort]")
    print("   Enabled: ‚úì")
    print("‚ñ∂Ô∏è Sauvegarder")
    
    print("\n3Ô∏è‚É£ ASSIGNER R√îLE READER")
    print("-" * 25)
    print("‚ñ∂Ô∏è S√©lectionner l'utilisateur 'railway_user'")
    print("‚ñ∂Ô∏è Onglet 'Roles' ‚Üí Cocher 'ROLE_READER'")
    print("‚ñ∂Ô∏è Sauvegarder")
    
    print("\n4Ô∏è‚É£ CONFIGURER SERVICE SECURITY")
    print("-" * 35)
    print("‚ñ∂Ô∏è Security ‚Üí Services")
    print("‚ñ∂Ô∏è Pour chaque service (WMS, WFS, WCS):")
    print("   - Mode: CHALLENGE")
    print("   - Autoriser: ROLE_READER")
    print("‚ñ∂Ô∏è Apply ‚Üí Save")
    
    print("\n5Ô∏è‚É£ CONFIGURER DATA SECURITY")
    print("-" * 30)
    print("‚ñ∂Ô∏è Security ‚Üí Data")
    print("‚ñ∂Ô∏è Pour chaque workspace/layer:")
    print("   - Read access: ROLE_READER")
    print("   - Write access: ROLE_ADMIN (ou vide)")
    print("‚ñ∂Ô∏è Apply ‚Üí Save")

def show_geoserver_global_settings():
    """Guide des param√®tres globaux GeoServer"""
    
    print("\n‚öôÔ∏è PARAM√àTRES GLOBAUX GEOSERVER")
    print("="*35)
    
    print("\n1Ô∏è‚É£ PROXY BASE URL (TR√àS IMPORTANT)")
    print("-" * 35)
    print("‚ñ∂Ô∏è Settings ‚Üí Global")
    print("‚ñ∂Ô∏è Proxy Base URL: http://VOTRE-IP-PUBLIQUE:8080/geoserver")
    print("‚ñ∂Ô∏è Exemple: http://81.220.178.156:8080/geoserver")
    print("‚ñ∂Ô∏è Save")
    print("‚ÑπÔ∏è  Ceci corrige les URLs dans les r√©ponses GetCapabilities")
    
    print("\n2Ô∏è‚É£ LOGGING (OPTIONNEL)")
    print("-" * 20)
    print("‚ñ∂Ô∏è Settings ‚Üí Global ‚Üí Logging")
    print("‚ñ∂Ô∏è Log Level: INFO ou DEBUG")
    print("‚ñ∂Ô∏è Save")

def show_test_commands():
    """Commandes de test"""
    
    print("\nüß™ COMMANDES DE TEST")
    print("="*25)
    
    print("\n1Ô∏è‚É£ TEST DEPUIS VOTRE PC")
    print("-" * 25)
    print("PowerShell:")
    print('curl "http://localhost:8080/geoserver/wms?service=WMS&request=GetCapabilities&version=1.3.0" -u railway_user:votre_mot_de_passe')
    
    print("\n2Ô∏è‚É£ TEST DEPUIS INTERNET")
    print("-" * 25)
    print("Depuis un autre r√©seau:")
    print('curl "http://VOTRE-IP:8080/geoserver/wms?service=WMS&request=GetCapabilities&version=1.3.0" -u railway_user:votre_mot_de_passe')
    
    print("\n3Ô∏è‚É£ TEST AUTHENTIFICATION")
    print("-" * 25)
    print('curl "http://VOTRE-IP:8080/geoserver/rest/about/version" -u railway_user:votre_mot_de_passe')

def show_railway_configuration():
    """Configuration Railway"""
    
    print("\nüöÇ CONFIGURATION RAILWAY")
    print("="*30)
    
    print("\n1Ô∏è‚É£ VARIABLES D'ENVIRONNEMENT")
    print("-" * 30)
    print("railway variables set GEOSERVER_URL=http://VOTRE-IP:8080/geoserver")
    print("railway variables set GEOSERVER_USERNAME=railway_user") 
    print("railway variables set GEOSERVER_PASSWORD=votre_mot_de_passe")
    print("railway variables set ENVIRONMENT=production")
    
    print("\n2Ô∏è‚É£ TEST DEPUIS RAILWAY")
    print("-" * 25)
    print("‚ñ∂Ô∏è D√©ployez votre app")
    print("‚ñ∂Ô∏è V√©rifiez les logs Railway")
    print("‚ñ∂Ô∏è Testez les endpoints /proxy/wms")

def generate_test_script():
    """G√©n√®re un script de test automatis√©"""
    
    print("\nüìù SCRIPT DE TEST AUTOMATIQUE")
    print("="*35)
    
    script = '''
# Script PowerShell de test GeoServer distant
param(
    [string]$IP = "81.220.178.156",
    [string]$User = "railway_user", 
    [string]$Pass = "votre_mot_de_passe"
)

$BaseURL = "http://$IP:8080/geoserver"

Write-Host "üß™ Test GeoServer Distant: $BaseURL" -ForegroundColor Green

# Test 1: Connectivit√©
Write-Host "1Ô∏è‚É£ Test connectivit√©..." -ForegroundColor Blue
try {
    $response = Invoke-WebRequest -Uri $BaseURL -TimeoutSec 10
    Write-Host "‚úÖ Serveur accessible (Status: $($response.StatusCode))" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Serveur non accessible: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Test 2: WMS Capabilities avec auth
Write-Host "2Ô∏è‚É£ Test WMS avec authentification..." -ForegroundColor Blue
$wmsUrl = "$BaseURL/wms?service=WMS&request=GetCapabilities&version=1.3.0"
$creds = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$User`:$Pass"))

try {
    $response = Invoke-WebRequest -Uri $wmsUrl -Headers @{Authorization="Basic $creds"} -TimeoutSec 20
    if ($response.Content -like "*WMS_Capabilities*") {
        Write-Host "‚úÖ WMS OK - Capabilities re√ßues" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è WMS r√©pond mais contenu inattendu" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Erreur WMS: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 3: Workspaces REST
Write-Host "3Ô∏è‚É£ Test acc√®s REST..." -ForegroundColor Blue
$restUrl = "$BaseURL/rest/workspaces"
try {
    $response = Invoke-WebRequest -Uri $restUrl -Headers @{Authorization="Basic $creds"; Accept="application/json"} -TimeoutSec 10
    Write-Host "‚úÖ REST accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur REST: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "‚úÖ Tests termin√©s!" -ForegroundColor Green
'''
    
    print("Sauvegardez ce script comme 'test-geoserver.ps1':")
    print(script)

def main():
    """Guide principal"""
    
    print("üéØ GUIDE COMPLET: GEOSERVER ACCESSIBLE √Ä DISTANCE")
    print("="*55)
    
    show_network_configuration_guide()
    show_geoserver_user_configuration()
    show_geoserver_global_settings()
    show_test_commands()
    show_railway_configuration()
    generate_test_script()
    
    print(f"\nüèÅ R√âSUM√â DES √âTAPES")
    print(f"="*25)
    print(f"1Ô∏è‚É£ Ouvrir port 8080 sur routeur + firewall")
    print(f"2Ô∏è‚É£ Cr√©er utilisateur 'railway_user' avec ROLE_READER")
    print(f"3Ô∏è‚É£ Configurer Service & Data Security")
    print(f"4Ô∏è‚É£ D√©finir Proxy Base URL")
    print(f"5Ô∏è‚É£ Tester depuis Internet")
    print(f"6Ô∏è‚É£ Configurer variables Railway")
    print(f"7Ô∏è‚É£ D√©ployer et tester")
    
    print(f"\nüí° Une fois configur√©, vous aurez:")
    print(f"‚úÖ Acc√®s GeoServer depuis Railway (production)")
    print(f"‚úÖ Acc√®s GeoServer depuis votre PC (d√©veloppement)")
    print(f"‚úÖ M√™me configuration partout")
    print(f"‚úÖ S√©curit√© avec utilisateur d√©di√©")

if __name__ == "__main__":
    main()
