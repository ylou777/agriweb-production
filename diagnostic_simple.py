#!/usr/bin/env python3
"""
üîç DIAGNOSTIC SIMPLE GEOSERVER
LECTURE SEULE - AUCUNE MODIFICATION
"""

print("üõ°Ô∏è DIAGNOSTIC S√âCURIS√â DE VOTRE GEOSERVER")
print("=" * 50)
print("‚ö†Ô∏è MODE LECTURE SEULE - Aucune modification")

try:
    import requests
    print("‚úÖ Module requests disponible")
    
    # Test simple de votre GeoServer
    test_urls = [
        "http://localhost:8080",
        "http://localhost:8080/geoserver", 
        "http://localhost:8081/geoserver"
    ]
    
    print("\nüîç Test de votre GeoServer...")
    
    for url in test_urls:
        try:
            print(f"\nüß≠ Test: {url}")
            response = requests.get(url, timeout=3)
            
            if response.status_code == 200:
                content = response.text.lower()
                if "geoserver" in content:
                    print(f"   ‚úÖ GeoServer trouv√© !")
                    print(f"   üìç URL op√©rationnelle: {url}")
                    
                    # Test rapide WFS
                    try:
                        wfs_url = f"{url}/ows" if "/geoserver" in url else f"{url}/geoserver/ows"
                        wfs_params = {
                            "service": "WFS",
                            "request": "GetCapabilities"
                        }
                        wfs_response = requests.get(wfs_url, params=wfs_params, timeout=5)
                        
                        if "WFS_Capabilities" in wfs_response.text:
                            print(f"   ‚úÖ Service WFS op√©rationnel")
                            
                            # Compter les couches
                            import re
                            layers = re.findall(r'<Name>([^<]+)</Name>', wfs_response.text)
                            print(f"   üìä {len(layers)} couches d√©tect√©es")
                            
                            if len(layers) > 0:
                                print(f"   üìã Exemples de couches:")
                                for layer in layers[:5]:  # 5 premi√®res seulement
                                    print(f"      - {layer}")
                                if len(layers) > 5:
                                    print(f"      ... et {len(layers)-5} autres")
                            
                        else:
                            print(f"   ‚ö†Ô∏è Service WFS: probl√®me de configuration")
                            
                    except Exception as e:
                        print(f"   ‚ö†Ô∏è Test WFS: {str(e)[:40]}...")
                        
                elif "tomcat" in content:
                    print(f"   ‚ÑπÔ∏è Tomcat trouv√© (GeoServer peut √™tre sur /geoserver)")
                else:
                    print(f"   ‚ùå Pas GeoServer (code {response.status_code})")
            else:
                print(f"   ‚ùå Erreur HTTP {response.status_code}")
                
        except requests.exceptions.ConnectionError:
            print(f"   ‚ùå Connexion impossible")
        except Exception as e:
            print(f"   ‚ùå Erreur: {str(e)[:40]}...")
    
    print(f"\nüéØ R√âSULTAT:")
    print(f"Si un GeoServer a √©t√© trouv√© ci-dessus,")
    print(f"nous pouvons maintenant l'int√©grer √† AgriWeb 2.0")
    print(f"en toute s√©curit√© (mode lecture seule)")
    
except ImportError:
    print("‚ùå Module requests non install√©")
    print("Installation en cours...")
    import subprocess
    import sys
    subprocess.check_call([sys.executable, "-m", "pip", "install", "requests"])
    print("‚úÖ Requests install√©, relancer le script")
    
except Exception as e:
    print(f"‚ùå Erreur: {e}")

print(f"\nüìñ Guide complet: GUIDE_GEOSERVER_CONFIGURATION.md")
