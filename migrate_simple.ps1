# Migration GeoServer Simple - Sans Docker
# Alternative pour commencer la migration sans Docker

Write-Host "üöÄ Migration GeoServer Simplifi√©e" -ForegroundColor Green

# Configuration
$GEOSERVER_LOCAL = "http://localhost:8080/geoserver"
$RAILWAY_APP_NAME = "geoserver-agriweb"

Write-Host "`nüìã √âtapes de migration:" -ForegroundColor Yellow
Write-Host "1. ‚úÖ Pr√©parer la configuration locale" -ForegroundColor Green
Write-Host "2. üîÑ Export des donn√©es GeoServer" -ForegroundColor Yellow  
Write-Host "3. üåê Cr√©ation du projet Railway" -ForegroundColor Yellow
Write-Host "4. üì§ D√©ploiement" -ForegroundColor Yellow
Write-Host "5. üîß Configuration de l'application" -ForegroundColor Yellow

# √âtape 1: Test de connexion locale
Write-Host "`nüîç Test de connexion GeoServer local..." -ForegroundColor Cyan

try {
    $response = Invoke-WebRequest -Uri "$GEOSERVER_LOCAL/rest/about/version" -Method GET -TimeoutSec 10 -UseBasicParsing
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ GeoServer local accessible" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå GeoServer local non accessible sur $GEOSERVER_LOCAL" -ForegroundColor Red
    Write-Host "üí° Assurez-vous que GeoServer est d√©marr√© localement" -ForegroundColor Yellow
    $continue = Read-Host "Continuer quand m√™me? (y/N)"
    if ($continue -ne "y" -and $continue -ne "Y") {
        exit 1
    }
}

# √âtape 2: Export des workspaces (pr√©paration)
Write-Host "`nüì¶ Pr√©paration de l'export des donn√©es..." -ForegroundColor Cyan

$exportScript = @"
import requests
import json
import os

def export_geoserver_config():
    base_url = '$GEOSERVER_LOCAL'
    
    try:
        # Test de connexion
        response = requests.get(f'{base_url}/rest/workspaces', 
                              auth=('admin', 'admin'), timeout=10)
        
        if response.status_code == 200:
            workspaces = response.json()
            print(f'‚úÖ Trouv√© {len(workspaces.get("workspaces", {}).get("workspace", []))} workspaces')
            
            # Sauvegarde de la configuration
            with open('geoserver_config_backup.json', 'w') as f:
                json.dump(workspaces, f, indent=2)
            
            print('‚úÖ Configuration sauvegard√©e dans geoserver_config_backup.json')
            return True
        else:
            print(f'‚ùå Erreur: {response.status_code}')
            return False
            
    except Exception as e:
        print(f'‚ùå Erreur de connexion: {e}')
        return False

if __name__ == '__main__':
    export_geoserver_config()
"@

$exportScript | Out-File -FilePath "export_config.py" -Encoding UTF8

# Ex√©cution de l'export
Write-Host "Ex√©cution de l'export des configurations..." -ForegroundColor Cyan
python export_config.py

# √âtape 3: Informations pour Railway
Write-Host "`nüöÇ Configuration Railway:" -ForegroundColor Cyan
Write-Host "Nom du projet sugg√©r√©: $RAILWAY_APP_NAME" -ForegroundColor Yellow

$projectName = Read-Host "Nom du projet Railway (appuyez sur Entr√©e pour '$RAILWAY_APP_NAME')"
if ([string]::IsNullOrEmpty($projectName)) {
    $projectName = $RAILWAY_APP_NAME
}

# √âtape 4: Cr√©ation du fichier de configuration pour Railway
Write-Host "`nüìÅ Cr√©ation des fichiers de configuration..." -ForegroundColor Cyan

# Railway configuration
$railwayToml = @"
[build]
builder = "dockerfile"
dockerfilePath = "Dockerfile.geoserver"

[deploy]
startCommand = "/opt/geoserver_startup.sh"
restartPolicyType = "never"

[[services]]
name = "geoserver"

[services.variables]
GEOSERVER_ADMIN_USER = "admin"
GEOSERVER_ADMIN_PASSWORD = "admin123"
JAVA_OPTS = "-Xms512m -Xmx1024m"
INITIAL_MEMORY = "512M"
MAXIMUM_MEMORY = "1024M"
"@

$railwayToml | Out-File -FilePath "railway.toml" -Encoding UTF8

# √âtape 5: Mise √† jour de l'application
Write-Host "`nüîß Mise √† jour de la configuration application..." -ForegroundColor Cyan

# Cr√©ation du fichier d'environnement
$envContent = @"
# Configuration GeoServer - G√©n√©r√© automatiquement
GEOSERVER_LOCAL_URL=http://localhost:8080/geoserver
GEOSERVER_PRODUCTION_URL=https://$projectName.up.railway.app/geoserver
ENVIRONMENT=development

# Pour passer en production, changez ENVIRONMENT=production
"@

$envContent | Out-File -FilePath ".env" -Encoding UTF8

# √âtape 6: Instructions pour la suite
Write-Host "`nüìã Prochaines √©tapes:" -ForegroundColor Green
Write-Host ""
Write-Host "üîß PR√âREQUIS (si pas d√©j√† fait):" -ForegroundColor Yellow
Write-Host "   .\install_prerequisites.ps1" -ForegroundColor Cyan
Write-Host ""
Write-Host "üöÇ D√âPLOIEMENT RAILWAY:" -ForegroundColor Yellow
Write-Host "   1. Cr√©ez un compte sur https://railway.app" -ForegroundColor Cyan
Write-Host "   2. Connectez-vous: railway login" -ForegroundColor Cyan
Write-Host "   3. D√©ployez: railway project create $projectName" -ForegroundColor Cyan
Write-Host "   4. Upload: railway up --dockerfile Dockerfile.geoserver" -ForegroundColor Cyan
Write-Host ""
Write-Host "üîÑ ALTERNATIVE SANS CLI:" -ForegroundColor Yellow
Write-Host "   1. Allez sur https://railway.app/new" -ForegroundColor Cyan
Write-Host "   2. Choisissez 'Deploy from GitHub repo'" -ForegroundColor Cyan
Write-Host "   3. Connectez ce repository" -ForegroundColor Cyan
Write-Host "   4. Railway d√©tectera automatiquement le Dockerfile" -ForegroundColor Cyan
Write-Host ""
Write-Host "üì± MIGRATION DES DONN√âES:" -ForegroundColor Yellow
Write-Host "   python migrate_geoserver.py" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚öôÔ∏è FICHIERS CR√â√âS:" -ForegroundColor Green
Write-Host "   ‚úÖ .env (configuration environnement)" -ForegroundColor Cyan
Write-Host "   ‚úÖ railway.toml (configuration Railway)" -ForegroundColor Cyan
Write-Host "   ‚úÖ export_config.py (script d'export)" -ForegroundColor Cyan
Write-Host "   ‚úÖ geoserver_config_backup.json (backup configuration)" -ForegroundColor Cyan

Write-Host "`nüéØ URL finale estim√©e:" -ForegroundColor Green
Write-Host "   https://$projectName.up.railway.app/geoserver" -ForegroundColor Cyan

Write-Host "`nüí° Conseil:" -ForegroundColor Yellow
Write-Host "   Gardez ce terminal ouvert et suivez les instructions √©tape par √©tape" -ForegroundColor Cyan
